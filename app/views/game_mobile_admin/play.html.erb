<section id="content">
    <div class="head head-play">
      <%= render partial: 'header' , locals: {can: true}%>
      <div style="display: none" id="current_user_id" data-id='<%= @turn.to_json.to_s.html_safe %>'></div>
      <div class="heading-text"><%= @cur_user.fname %> Pitcht!</div>
    </div>
    <div class="middle middle-play middlePlay-top">
      <%= image_tag @cur_user.avatar.quad330.url || 'defaults/wolf.jpg', class: 'mid-img green', id: 'img-dp', style: "display: #{@record == true ? 'none' : 'block'}" %>
      <div class="middle-content">
        <video id="preview" autoplay width="600" height="600" style="display: <%= @record == true ? 'block' : 'none' %>;" muted></video>
        <video id="recording" width="600" height="600"  controls style="display: none;"></video>
      </div>
      <label id="timer" style="display: <%= @record == true ? 'block' : 'none' %>">00:00:00</label>
      <div class="buttons buttons-play">
        <button id='stop' class="button-stop" style="display: <%= @record == true ? 'block' : 'none' %>;">
          <i class="fa fa-stop"></i>
        </button>
        <div class="play-check-time" style="display: none">
          <button id='uploaded' class="button-check" >
            <i class="fa fa-check"></i>
          </button>
          <p class="play-time-para">Video erfolgreich hochgeladen</p>
        </div>
        <div class="cancel play-cancel-time" id="upload" style="display: none">
          <button id="button-cancel" class="button-cancel">
    <!--         <svg
             class="progress-ring"
             width="5vh"
             height="5vh">
            <circle
              class="progress-ring__circle"
              stroke="white"
              stroke-width="4"
              fill="transparent"
              r="38"
              cx="50"
              cy="50"/>
              <i class="fa fa-times"></i>
          </svg> -->
          <svg
             class="progress-ring"
             width="98"
             height="98">
            <circle
              class="progress-ring__circle"
              stroke="white"
              stroke-width="4"
              fill="transparent"
              r="39"
              cx="49"
              cy="49"/>
          </svg>
          <i class="fa fa-times"></i>
          </button>
          <p class="play-time-para" >Video wird gespiehert...</p>
        </div>
      </div>
    </div>
    <div class="bottom bottom-play" style="top: <%= @record ? '88% !important' : '66%'%>;">
      <%= link_to 'beenden!', gma_rate_path %>
    </div>
</section>

<div class="modal modal-choice" id="myModal">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <!-- Modal body -->
        <div class="modal-body">
          <button type="button" class="close" data-dismiss="modal"><span>&times;</span></button>

        	<ul>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Kein Zeit
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Bei der Konkurrenz
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Auf den Punkt kommen
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  						  Kein Budget
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Schick mir eini Mail
							</a>
						</li>
        		<li>
        			<a type="a" class="  objection -primary" data-toggle="modal" data-target="#myModal">
  							Kein Interesse
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Muss ich den Chef Fragen
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Referenzen
							</a>
						</li>
        		<li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Ist Quatsch
							</a>
						</li>
        		<!-- <li>
        			<a type="a" class=" objection -primary" data-toggle="modal" data-target="#myModal">
  							Einw√§nde 10
							</a>
						</li> -->
        	</ul>
        </div>
      </div>
    </div>
  </div>
  
</div>

<% if @game %>
  <div id='game_channel' data-game-id="<%= @game.id %>"></div>
<% end %>
<script>
  var uploadingprogress = 0;
var timer = document.getElementById("timer");
var seconds = 0, minutes = 0, hours = 0, secondsCount = 0;
const preview = document.querySelector('video#preview');
const recording = document.querySelector('video#recording');
var video, reqBtn, startBtn,jqxhr, stopBtn, ul, stream, recorder,form, uploadBtn, file;
video = document.getElementById('video');
reqBtn = document.getElementById('request');
startBtn = document.getElementById('start');
stopBtn = document.getElementById('stop');
uploadBtn = document.getElementById('upload');
ul = document.getElementById('ul');
var timertime;
var videoStopped = false;
$(document).ready(function(){
  $("#start").change(function(){
    if( $(this).is(':checked')){
      requestVideo()
      setTimeout(startRecording(), 200)
    }
  })
})
$("#stop").on('click', function(){
  stopRecording("nothing", function(x){console.log(x)})
})

function add() {
    seconds++;
    secondsCount++;
    if (seconds >= 60) {
        seconds = 0;
        minutes++;
        if (minutes >= 60) {
            minutes = 0;
            hours++;
        }
    }
    
    timer.textContent = (hours ? (hours > 9 ? hours : "0" + hours) : "00") + ":" + (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00") + ":" + (seconds > 9 ? seconds : "0" + seconds);

    setTimer();
}
function setTimer() {
    timertime = setTimeout(add, 1000);
}
var Devices = []
<% if @record == true  %>
  requestVideo()
<% end %>
function requestVideo() {
  navigator.mediaDevices.enumerateDevices().then(gotDevices)
  function gotDevices(mediaDevices){
    mediaDevices.forEach(function(mediaDevice){
      if (mediaDevice.kind === 'videoinput') {
        Devices.push(mediaDevice)
      }
    })
  const constraints = {
    video: { frameRate: { ideal: 100, max: 120 }, width: {exact: 1280}, height: {exact: 720},deviceId: { exact: Devices[Devices.length-1].deviceId} },
    audio: true
  };
  navigator.mediaDevices.getUserMedia(constraints)
    .then(stm => {
      stream = stm;
      preview.srcObject = stream;
      preview.captureStream = preview.captureStream(5) || preview.mozCaptureStream(5);
    }).then(()=>{
      const options = {};
      setTimeout(function(){
        recorder = new MediaRecorder(stream, options);
        recorder.start();
        $("#stop").show()
        $("#timer").show()
        setTimer();
      },1000)
    }).catch(e => {
      console.log(e.message)
      $("#recording").hide()
      $("#timer").hide()
      $(".buttons-play").hide()
      $("#img-dp").show()
      $(".bottom-play")
    });
  }
  
}
var circle = document.querySelector('circle');
var radius = circle.r.baseVal.value;
var circumference = radius * 2 * Math.PI;

circle.style.strokeDasharray = `${circumference} ${circumference}`;
circle.style.strokeDashoffset = `${circumference}`;

function setProgress(percent) {
  const offset = circumference - percent / 100 * circumference;
  circle.style.strokeDashoffset = offset;
}



function startRecording() {
  $("#switch").hide()
  $("#img-dp").hide()
  $(".bottom-play").hide()
  $(".middle-play").addClass("middlePlay-top")
}
function stopRecording(location,callback) {
  $("#timer").hide()
  $(".bottom").hide()
  videoStopped = true;
  recorder.ondataavailable = e => {
    recording.src = URL.createObjectURL(e.data);
    $('#preview').hide();
    clearTimeout(timertime);
    $('#recording').show();
    var blob = e.data;
    var file = new window.File([blob], ['video_', (new Date() + '').slice(4, 28), '.webm'].join(''))
    form = new FormData();
    form.append("file",file);
    form.append("duration",secondsCount);
    uploadRecording(form, callback, location)
  };

  $("#stop").hide()
  $("#upload").show()
  recorder.stop();
  stopBtn.disabled = true;
  stream.getTracks()[0].stop()
  stream.getTracks()[1].stop()
  $("#cancel").show()
}
$("#button-cancel").click(function(){
  jqxhr.abort()
  requestServerForCanceling()
  showInSequence($(this).parent())
})

function requestServerForCanceling(){
  $.ajax({
    url: '/mobile/admin/video_cancel'
  })
}
var completed_ajax= false;
function uploadRecording(form, callback, location){
  jqxhr = $.ajax({
    url: '/mobile/admin/upload',
    type: 'POST',
    data: form,
    cache: false,
    async: true,
    contentType: false,
    processData: false,
    xhr: function () {
      var myXhr = $.ajaxSettings.xhr();
      if (myXhr.upload) {
        myXhr.upload.addEventListener('progress', function (e) {
          if (e.lengthComputable) {
            console.log(e.loaded/e.total*100)
            setProgress(e.loaded/e.total*100)
            uploadingprogress = e.loaded/e.total*100
            if(uploadingprogress== 100){
              $("#uploaded").parent().fadeIn()
              showInSequence($("#uploaded").parent());
              $("#upload").hide()
              completed_ajax= true
              callback(location)
            }
          }
        }, false);
      }
      return myXhr;
    }
  });
}
function showInSequence(div){
  div.fadeOut(1000)
  setTimeout(function(){$(".bottom").fadeIn(1000)},1500)
}
</script>
<% if @game %>
  <div id='game_channel' data-game-id="<%= @game.id %>"></div>
<% end %>
<script type="text/javascript">
  $("#list").on("click", function(e){
    if(objectionTime == true){
      $("#myModal").show()      
    }
  })
  $(".close").on("click", function(){
      $("#myModal").hide()     
  })
  var objectionTime = true;
  $(".objection").on("click", function(e){
    e.preventDefault()
    var objection = $(this).text()
    $.ajax({
      url: "<%= gda_objection_path %>",
      type: 'post',
      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
      data: {objection:  objection},
      success: function(res){
        objectionTime = false
        document.getElementById("list").disabled = true;
        setTimeout(function(){
          objectionTime = true;
          $("#list").removeAttr("disabled");
        }, 10000)
        $("#myModal").hide()

      }
    })
  })
</script>