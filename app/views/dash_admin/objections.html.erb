<section id="gd_team">
    <input type="text" id="searchField" placeholder="suchen" onfocus='team_hide()' onblur="team_show()">
    <%= image_tag 'dash/search.png' %>
</section>

<section id="teams-container">
    <div class="add_team" onclick="openObjectionBasket()">
       <a onclick="openObjectionBasket()"></a>
        <div class="head">
            Objection List
        </div>
        <div class="middle">
            +
        </div>
        <div class="bottom">
            hinzufügen
        </div>
    </div>
    <% @baskets.each do |b| %>
    <div class="team_card">

       <%= link_to '', "", class: "lists", data: {id: b.id} %>

        <div class="head">
            <%= b.name %>
        </div>
        <div class="middle">
            <span id="count<%= b.id %>"><%= b.objections.distinct.count %></span> words
        </div>
        <div class="bottom">
            <%= link_to '', dash_admin_delete_basket_path(b.id), method: :post,class: 'fas fa-trash-alt', data: { confirm: "Sind Sie sicher, dass Sie das List unwiederuflich löschen möchten?" }%>
        </div>
    </div>
        <%= render partial: 'objections_modal', locals: {id: b.id, words: b.objections, name: b.name, objection: true} %>
    <% end %>

</section>

<script>
$(".lists").on("click", function(e){
    e.preventDefault()
    $("#catchword"+$(this).data("id")).modal("show")
})
var globalForm = new FormData(); ;


$(document).ready(function(){
  $(".forms").on('submit',function(e){
    e.preventDefault();
    var id = $(this).data("id");
    var name = $("#input_name"+id).val();
    var $url = $(this).attr("action");
    createObjection(name, $url, form)
  })
})


var $rows = $('.team_card');
$('#searchField').keyup(function() {
    var val = '^(?=.*\\b' + $.trim($(this).val()).split(/\s+/).join('\\b)(?=.*\\b') + ').*$',
        reg = RegExp(val, 'i'),
        text;
    $rows.show().filter(function() {
        text = $(this).text().replace(/\s+/g, ' ');
        return !reg.test(text);
    }).hide();
});
team_show = function() {
    $('.add_team').show();
}
team_hide = function() {
    $('.add_team').hide();
}
new PerfectScrollbar('#teams-container');

$( document ).ready(function() {
  $(".record").on('click', function(e){
    e.preventDefault()
    id = $(this).data("id");
    requestAudio(id)
  })
});

function createObjection(name, url, sound) {
    globalForm.append("name", name)
    $.ajax({
      url: url,
      type: 'post',
      cache: false,
      async: true,
      contentType: false,
      processData: false,
      data:  globalForm,
      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
      success: function(res){
        globalForm = new FormData();
        $("#attached_music"+id).text("").attr("href","")
      }
    })
}
var id, recorder;
$(".record").on('click', function(e){
  e.preventDefault()
  id = $(this).data("id");
  requestAudio(id)
})
var stream, form;
function requestAudio(id) {
  var seconds = 10;
  navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {
      const chunks = [];
      const recorder = new MediaRecorder(stream);
      recorder.ondataavailable = e => {
        seconds -= 1 
        chunks.push(e.data);
        $("#record-button"+id).css("color","red")
        if (recorder.state == 'inactive') {
            const blob = new Blob(chunks, { type: 'audio/webm' });
            var file = new window.File([blob], ['audio', (new Date() + '').slice(4, 28), '.wav'].join(''))
            globalForm.append("file",file);
            $("#record-button"+id).text("")
            var url = URL.createObjectURL(blob)
            var template = `<a class="remove" id="remove`+id+`">x</a>`;
            $("#attached_music"+id).html(template).attr("href",url)
            $("#record-button"+id).css("color","#1ddaaf")
        }
      };
      recorder.start(1000);
      setTimeout(() => {
          recorder.stop();
      }, 10000);
    }).catch(console.error);
}

</script>
