<div class="scrollable-content" id="scrollbar" onclick="teamSelectHide()">
<div class="heading">
    <%= @team.name + "'s Ratings" %>
    <div class="select-team custom-select" onclick="teamSelect()">Alle Teams
        <div class="teams" id="scrollTeams" >
            <% @teams.each do |t| %>
                <% if t.team_rating_criteria.present? %>
                    <div class="team" onmouseover="teamSelectUser(this)" onmouseout="teamSelectUserHide(this)"><%= link_to t.name, dash_admin_team_stats_path(t.id) %> <i class="fas fa-caret-left"></i>
                        <div class="users" id="scrollUsers">
                            <% t.users.each do |u| %>
                                <% if u.user_rating_criteria.present? %>
                                    <div class="user"><%= link_to (u.fname.present? ? u.fname : "") + ' ' + (u.lname.present? ? u.lname : ""), dash_admin_user_stats_path(u.id) %></div>
                                <% end %>
                            <% end %>
                        </div>
                    </div>
                <% end %>
            <% end %>  
        </div>
    </div>
</div>

<div class="rating-overview">
    <% @team_ratings = @team_rating_criteria.select { |rating| (!rating.name.start_with? 'change') && (rating.name != 'ges')} %>
    <% team_rating_ges = @team_rating_criteria.select { |rating| rating.name == 'ges'}.first %>
    <div class="karte rating-block active" id="ges">
        <div class="icon-circle">
            <i class="fas fa-star"></i>
        </div>
        <% rating_value = team_rating_ges.value.present? ? team_rating_ges.value : 0 %>
        <div>
            <div class="inner-content text-center" style="margin: 0.8vh auto 0;">
                <div class="right-border">
                    <div class="c100 p<%= rating_value %> center" style="font-size: 12vh;">
                        <span class="rating-1"><%= team_rating_ges.value.present? ? ((team_rating_ges.value / 10.0 == 10.0) ? '10' : (team_rating_ges.value / 10.0)) : '0.0' %></span>
                        <div class="slice"><div class="bar"></div><div class="fill"></div></div>
                    </div>
                </div>
            </div>
        </div>
        
        <label>Gesamt</label>
        <% change_rating = @team_rating_criteria.find_by_name("change_ges") %>
        <% if change_rating.value.present? %>
        <% if change_rating.value > 0 %>
            <div class="change up">
                <i class="fas fa-caret-up"></i>
                <%= (change_rating.value / 10.0).round(1) %>
            </div>
        <% elsif change_rating.value < 0 %>
            <div class="change down">
                <i class="fas fa-caret-down"></i>
                <%= (change_rating.value / 10.0).round(1) %>
            </div>
        <% else %>
            <div class="change equal">
                <i class="fas fa-equals"></i>
                <%= (change_rating.value / 10.0).round(1) %>
            </div>
        <% end %>
        <% end %>
    </div>
    <% @team_ratings.each_with_index do |team_rating, index| %>
        <div class="karte rating-block" id="<%= team_rating.name %>">
            <div class="icon-circle">
                <i class="fas fa-star"></i>
            </div>
            <% rating_value = team_rating.value.present? ? team_rating.value : 0 %>
            <div>
                <div class="inner-content text-center" style="margin: 0.8vh auto 0;">
                    <div class="right-border">
                        <div class="c100 p<%= rating_value %> center" style="font-size: 12vh;">
                            <span class="rating-1"><%= team_rating.value.present? ? ((team_rating.value / 10.0 == 10.0) ? '10' : (team_rating.value / 10.0)) : '0.0' %></span>
                            <div class="slice"><div class="bar"></div><div class="fill"></div></div>
                        </div>
                    </div>
                </div>
            </div>
            
            <label><%= team_rating.name == 'ges' ? 'Gesamt' : team_rating.name %></label>
            <% change_rating = @team_rating_criteria.find_by_name("change_#{team_rating.name}") %>
            <% if change_rating.value.present? %>
            <% if change_rating.value > 0 %>
                <div class="change up">
                    <i class="fas fa-caret-up"></i>
                    <%= (change_rating.value / 10.0).round(1) %>
                </div>
            <% elsif change_rating.value < 0 %>
                <div class="change down">
                    <i class="fas fa-caret-down"></i>
                    <%= (change_rating.value / 10.0).round(1) %>
                </div>
            <% else %>
                <div class="change equal">
                    <i class="fas fa-equals"></i>
                    <%= (change_rating.value / 10.0).round(1) %>
                </div>
            <% end %>
            <% end %>
        </div>
    <% end %>
</div>


<div class="heading">Details</div>

<div class="stats-overview">
    <div class="karte">
        <label>aktive Tage</label>
        <div class="number"><%= @days %></div>
    </div>
    <div class="karte">
        <label>Pitches</label>
        <div class="number"><%= @games.count %></div>
    </div>
    <div class="karte">
        <label for="">best score</label>
        <% best_rating = number_with_precision(@ges_ratings.reorder('value DESC').first.value.present? ? @ges_ratings.reorder('value DESC').first.value.to_f / 100.0 : 0.0, precision:1) %>
        <div class="number best-rating"><%= (@ges_ratings.reorder('value DESC').first.value.present? ? (@ges_ratings.reorder('value DESC').first.value / 10.0) : 0.0) %></div>
    </div>
    <div class="karte">
        <label for="">worst score</label>
        <% worst_rating = number_with_precision(@ges_ratings.reorder('value ASC').first.value.present? ? @ges_ratings.reorder('value ASC').first.value.to_f / 100.0 : 0.0, precision:1) %>
        <div class="number worst-rating"><%= (@ges_ratings.reorder('value ASC').first.value.present? ?  (@ges_ratings.reorder('value ASC').first.value / 10.0) : 0.0) %></div>
    </div>
</div>

<div class="karte" id="statistic">
    <div class="head left">Fortschritt</div>
    <div class="chart">
        <canvas id="myChart" width="814px" height="280px"></canvas>
    </div>
    <div class="divider"></div>
    <div class="right">
        <div class="karte bestlist small">
            <div class="table">
                <div class="table-line">
                    <div class="name">
                       1.<%=  @team_users.first[:fname] %>
                    </div>
                    <div class="points">
                       <%= number_with_precision @team_users.first[:ges].to_f / 10, precision: 1 %>
                    </div>
                </div>
                <% if @team_users.length > 1 %>
                <div class="table-line">
                    <div class="name">
                        2.<%=  @team_users.second[:fname] %>
                    </div>
                    <div class="points">
                        <%= number_with_precision @team_users.second[:ges].to_f / 10, precision: 1 %>
                    </div>
                </div>
                <% if @team_users.length > 2 %>
                <div class="table-line">
                    <div class="name">
                       	3.<%=  @team_users.third[:fname] %>
                    </div>
                    <div class="points">
                        <%= number_with_precision @team_users.third[:ges].to_f / 10, precision: 1 %>
                    </div>
                </div>
                <% else %>
                <div class="table-line">
                    <div class="name">
                    </div>
                    <div class="points">
                    </div>
                </div>
                <% end %>
                <% else %>
                <div class="table-line">
                    <div class="name">
                    </div>
                    <div class="points">
                    </div>
                </div>
                <% end %>
            </div>
            <%= image_tag 'current.png', class: 'rating-record' %>
        </div>
        <% video = @reviewed_videos.first %>
        <% if video.present? %>
        <div class="video-box">
        <h6><%= @team.name.to_s + "'s"%> Aufnahmen</h6>
        <div class="video-list" id="videoList">
        <div class="video-karte pitches" onclick="redirect('<%= dash_admin_video_details_url(video.id) %>')">
            <div class="top">
            <div class="video-img" style="background-image: url('<%= asset_path(video.recorded_pitch.thumb.url) %>')"></div>
            <div class="overlay"></div>
            <%
                total_time = video.recorded_pitch_duration.to_minutes if video.recorded_pitch_duration.present? 
            %>
            <!-- <div class="timer"><%= total_time %></div> -->
            <div class="play"><i class="fas fa-play"></i></div>
            <div class="heart"><%= total_time%></div>
            </div>
            <div class="player">
            <%#= (r[:user_fname].present? ? r[:user_fname] : '') + " " + (r[:user_lname].present? ? r[:user_lname] : '') %>
            </div>
        </div>
        </div>
        <% end %>
        <a href="/admins/dash/video_tool">alle Aufnahmen</a>
        </div>
    </div>
    </div>
</div>
</div>
<div class="fullscren-blur" id="help-popup">
</div>

<%= render partial: 'stats_modal', locals: {team_id: @team.id, team_users: @team_users, team_users_rating_names: @team_user_rating_names} %>


<style>

        .rating-wrapper {
            overflow-x: scroll;
            width: 192vh;
        }
        
        .rating-overview {
            /* display: flex;
            flex-wrap: nowrap;
            overflow-y: hidden;
            overflow-x: auto; */
            position: relative;
            width: 132.6vh;
            /* overflow: hidden; */
            margin: 0 auto;
        }
        
        .rating-overview .karte {
            flex: 0 0 auto;
        }
        
        .video-list {
                cursor: pointer;
            }
        
            #videoList .top .video-img {
                top: -1.5vh;
                right: 0;
                bottom: -1.5vh;
                left: 0;
            }
        
            #videoList .fa-play {
                position: relative;
                display: flex;
                justify-content: center;
                align-items: center;
                top: 1.7vh;
            }
        
            #videoList .top .play {
                position: absolute;
                top: 4.5vh;
                left: 6.2vh;
                height: 5.2vh;
                width: 5.2vh;
                background-color: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                line-height: 6.2vh;
                text-align: center;
                color: white;
                font-size: 1.8vh;
                align-items: center;
            }
        
            #videoList .top {
                position: relative;
                border-top-left-radius: 0.8vh;
                border-top-right-radius: 0.8vh;
                height: 14.5vh;
                width: auto;
                overflow: hidden;
                border-radius: 0.8vh;
            }
        
            .video-box {
                padding-top: 2vh;
                text-align: center;
            }
        
            .video-box h6,
            .video-box {
                font-size: 1.8vh;
            }
        
            .video-box a {
                padding-top: 1vh;
                display: flex; 
                justify-content: center; 
                text-decoration: none; 
                color: #16e2a5;
            }
        
            .rating-record {
                cursor: pointer;
                position: absolute;
                right: -6.5vh;
                top: 8vh;
                width: 4vh;
                height: 4vh;
            }
        
            .active .p0 .bar,
            .active .p0 .fill {
                border: none !important;
            }
            .overly-me {
                width: 132.6vh;
                margin: 0 auto;
                position: relative;
                min-height: 25vh;
                display: block;
            }
            .overly-me:after {
                content: '';
                background-color: rgba(255, 255, 255, 0.59);
                top: 0;
                right: -28vh;
                bottom: 0;
                width: 20vh;
                display: block;
                position: absolute;
                z-index: 1;
            }
            .rating-wrapper {
                overflow-x: scroll;
                width: 160vh;
                position: absolute;
            }
            .rating-overview .karte:last-child {
                margin-right: 20vh;
            }
            .hidden-me {
                visibility: hidden;
                width: 20vh !important;
            }
            #content {
                overflow-x: hidden;
            }

            .rating-overview .karte:last-child {
                margin-right: 0 !important;
            }
            
            .fa-left,
            .fa-right {
                position: absolute;
                top: 11vh;
                color: #16e2a5;
                z-index: 1;
            }

            .fa-left {
                left: -1.8vh;
            }
            .fa-right {
                right: 0;
            }
            
</style>

<script>


$('.rating-overview22').slick({
  infinite: true,
  slidesToShow: 4,
  slidesToScroll: 4
});

$('.rating-overview').slick({
  dots: false,
  infinite: false,
  speed: 300,
  slidesToShow: 4,
  slidesToScroll: 4,
  arrows: true,
  prevArrow:"<i class='fas fa-left fa-chevron-circle-left'></i>",
  nextArrow:"<i class='fas fa-right fa-chevron-circle-right'></i>",      
  responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 4,
        slidesToScroll: 4,
        infinite: true,
        dots: false
      }
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 4,
        slidesToScroll: 4
      }
    },
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 4,
        slidesToScroll: 4
      }
    }
    // You can unslick at a given breakpoint now by adding:
    // settings: "unslick"
    // instead of a settings object
  ]
});

let team_ratings_length = <%= @team_ratings.length + 1 %>;
if (team_ratings_length <= 4){
    $('.fa-left').css('display', 'none');
    $('.fa-right').css('display', 'none');
} else {
    $('.fa-left').css('display', 'block');
    $('.fa-right').css('display', 'block');
}
    function redirect(url) {
        window.location.replace(url);
    }

    function myColor() {
        let class_name = 0;
        let val = 0;
        <% team_ratings = @team_rating_criteria.select { |rating| (!rating.name.start_with? 'change')} %>
        <% team_ratings.each do |team_rating| %>
            class_name = <%= team_rating[:value].present? ? team_rating[:value] : 0 %>
            val = <%= number_with_precision(team_rating[:value].present? ? team_rating[:value].to_f / 100.0 : 0.0, precision:1) %>;
            if (val != 0.0) {
                let color_value = '#fff';
                if (val < 0.5 ) {
                    color_value = '#'+(Math.round(255-(val*2))).toString(16)+(Math.round(107+(val*288))).toString(16)+(Math.round(108+(val*180))).toString(16);
                } else {
                    color_value = '#'+(Math.round(29+((1-val)*450))).toString(16)+(Math.round(218+((1-val)*66))).toString(16)+(Math.round(175+((1-val)*46))).toString(16);
                }
                $(`.rating-overview .c100.p${class_name} .bar`).attr('style',`border: 0.08em solid ${color_value}`)
                $(`.rating-overview .c100.p${class_name} .fill`).attr('style',`border: 0.08em solid ${color_value}`)
                $(`.rating-overview .c100.p${class_name} .rating-1`).attr('style',`color: ${color_value}`);
            }
        <% end %>
    }
    myColor();

    function ratingColor(class_name, rating) {
        if (rating < 0.5 ) {
            var color_value = '#'+(Math.round(255-(rating*2))).toString(16)+(Math.round(107+(rating*288))).toString(16)+(Math.round(108+(rating*180))).toString(16);
        } else {
            var color_value = '#'+(Math.round(29+((1-rating)*450))).toString(16)+(Math.round(218+((1-rating)*66))).toString(16)+(Math.round(175+((1-rating)*46))).toString(16);
        }
        $(`.${class_name}`).attr('style',`color: ${color_value}`);
    }

    var best_rating = <%= best_rating %>
    var worst_rating = <%= worst_rating %>
    ratingColor('best-rating', best_rating);
    ratingColor('worst-rating', worst_rating);

    
    // new PerfectScrollbar('#team-users');
    $(".rating-record").on('click',function(){
        $('#myModal').modal('show');
    });

    console.log('<%= @chartdata.count %>')
    new PerfectScrollbar('#scrollbar');
    function teamSelect() {
        setTimeout(function() {
            $('.heading .select-team .teams').show();
        }, 100);
    }
    function teamSelectHide() {
        $('.heading .select-team .teams').hide();
    }
    function teamSelectUser(elem) {
        $(elem).children().show();
    }
    function teamSelectUserHide(elem) {
        $(elem).find('.users').hide();
    }
var ctx = document.getElementById("myChart");
var datapoints = [NaN, NaN, NaN, NaN, NaN, NaN ];
var datapoints2 = [NaN, NaN, NaN, NaN, NaN, NaN ];
var label = [NaN, NaN, NaN, NaN, NaN, NaN];
var i = 0;
var team = '<%= '' + @team.name %>';
<% @chartdata.last(6).each do |cd| %>
    var json_data = <%= cd.to_json.html_safe %>;
    console.log(json_data)
    label[i] = "<%= cd[:date].to_s %>";
    datapoints[i] = {value: <%= (cd[:ges].present? ? cd[:ges] : 0) / 10.0 %>, data: json_data};
    i++;
<% end %>
var data1 = [], pointStyles = [];
i = 0;
datapoints.forEach(function(el){
    if(el.value == undefined){
        data1[i] = el
    }else{
        data1[i] = el.value
        if(el.data.turn_pitch){
            var play = new Image();
            play.src = '<%= asset_path "dash/icons/play-shadow.png" %>';
            play.width = 35
            play.height = 35
            pointStyles[i] = play
        }else{
            var play = new Image();
            play.src = '<%= asset_path "dash/icons/dot.png" %>';
            play.width = 25
            play.height = 25
            pointStyles[i] = play
            // pointStyles[i] = 'circle'
        }
    }
    i++;        
})


var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: label,
        datasets: [{
            label: team,
            data: data1,
            fill: false,
            lineTension:0,
            spanGaps: true,
            borderWidth: 3,
            borderColor: "rgba(67, 148, 236, 1)",
            pointBackgroundColor: "#4394ec",
            pointBorderColor: "#fafafa",
            pointBorderWidth: 3,
            pointRadius: 9,
            hoverRadius: 9,
            pointStyle: pointStyles,
            datapoints: datapoints,
            extra: datapoints
        }],
    },
    options: {
        layout: {
            padding: {
                top: 25,
                left: 25,
            }
        },
        legend: {
            display: false,
        },
        title: {
            display: false,
        },
        scales: {
            yAxes: [{
                gridLines: {
                    display: true,
                    color:"rgba(94, 94, 94, 0.15)",
                    lineWidth: 0.2,
                    zeroLineColor: "rgba(94, 94, 94, 0.15)",
                },
                ticks: {
                    suggestedMin: 0,
                    suggestedMax: 10,
                    stepSize: 1,
                    fontColor:"rgba(0,0,0,1.0)",
                    fontSize: 14,
                    fontFamily: 'Nunito',
                }
            }],
            xAxes: [{
                gridLines: {
                    display: false,
                    color:"rgba(255,255,255,1.0)",
                    lineWidth: 0.2,
                    zeroLineBorderDashOffset: 1.0,
                },
                ticks: {
                    fontColor:"rgba(0,0,0,1.0)",
                    fontSize: 14,
                    fontFamily: 'Nunito',
                }
            }],
        },
        tooltips: {
            yAlign: 'center',
            mode: 'single',
            onlyShowForDatasetIndex: [0],
            enabled: false,
            position: 'nearest',
            intersect: true,
            dataPoints: datapoints,
            custom: function(tooltipModel) {
                var tooltipEl = document.getElementById('chartjs-tooltip');
                
                if (!tooltipEl) {
                    tooltipEl = document.createElement('div');
                    tooltipEl.id = 'chartjs-tooltip';
                    tooltipEl.class = 'chart-tooltip';
                    tooltipEl.innerHTML = ''
                    document.body.appendChild(tooltipEl);
                }
                if (tooltipModel.opacity === 0) {
                    tooltipEl.style.opacity = 0;
                    return;
                }
                
                tooltipEl.classList.remove('above', 'below', 'no-transform');
                if (tooltipModel.yAlign) {
                    tooltipEl.classList.add(tooltipModel.yAlign, 'small');
                } else {
                    tooltipEl.classList.add('no-transform');
                }
                
                function getBody(bodyItem) {
                    return bodyItems.lines;
                }
                if (tooltipModel.body) {
                    var titleLines = tooltipModel.title || '';
                    
                    var innerHtml = '';
                    titleLines.forEach(function(title){
                        innerHtml += title;
                    });
                    
                    var tableRoot = tooltipEl;
                    tableRoot.innerHTML = innerHtml;
                }
                var position = this._chart.canvas.getBoundingClientRect();
                
                tooltipEl.style.opacity = 1;
                tooltipEl.style.position = 'absolute';
                // debugger
                tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX - 140 + 'px';
                tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY - 460 + 'px';
                // tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX - 950 + 'px';
                // tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY - 690 + 'px';
                
                // tooltipEl.style.left = (((position.left + tooltipModel.caretX)) - ($('#chartjs-tooltip').outerWidth()*3.45))+ 'px';
                // tooltipEl.style.top = ( (position.top + tooltipModel.caretY) - ($('#chartjs-tooltip').outerHeight()*1.73)) + 'px';
                tooltipEl.style.pointerEvents = 'none';
            },
            callbacks: {
                title: function(tooltipItem, data) {
                    var innerHtml = '<div class="head">';
                        innerHtml += '<div class="date">'+tooltipItem[0]["xLabel"]+'</div>';
                        innerHtml += '<div class="word">'+team+'</div></div>';

                        innerHtml += '<div class= "body">';
                        
                        // innerHtml += '<div class="rating">';
                        // innerHtml += '<div class="circle">'+data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["ges"]/ 10.0+'</div>';
                        // innerHtml += '<div class="text">Gesamt</div>';
                        // innerHtml += '</div>';
                        var ges_value = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["ges"];
                        var val =  ges_value / 100
                        val = val.toPrecision(1)
                        if (val < 0.5 ) {
                            var color_value = '#'+(Math.round(255-(val*2))).toString(16)+(Math.round(107+(val*288))).toString(16)+(Math.round(108+(val*180))).toString(16);
                        } else {
                            var color_value = '#'+(Math.round(29+((1-val)*450))).toString(16)+(Math.round(218+((1-val)*66))).toString(16)+(Math.round(175+((1-val)*46))).toString(16);
                        }

                        innerHtml += '<div class="inner-content text-center">';
                        innerHtml += '<div class="right-border">';
                        innerHtml += `<div class="c100 p${ges_value} center" style="font-size: 9vh;">`;
                        innerHtml += '<span>'+ges_value/ 10.0+'</span>';
                        innerHtml += '<div class="slice">';
                        innerHtml += `<div class="bar" style="border-color: ${color_value}">`;
                        innerHtml += '</div>';
                        innerHtml += `<div class="fill" style="border-color: ${color_value}">`;
                        innerHtml += '</div>';
                        innerHtml += '</div>';
                        innerHtml += '</div>';
                        innerHtml += '</div>';
                        innerHtml += '</div>';
                        innerHtml += '<label class="gesamt-label">Gesamt</label>';

                        var names_count = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["names_count"]
                        if (names_count > 0) {
                        var name_0 = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["name_0"]
                        innerHtml += '<div class="stats">';
                        innerHtml += '<div class="text">'+ name_0 +'</div>';
                        innerHtml += '<div class="line"><div class="fill" style="width: '+ data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_0] +'%"></div></div>';
                        innerHtml += '<div class="line-text">'+data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_0] / 10.0+'</div></div>'
                        }
                        if (names_count > 1) {
                        var name_1 = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["name_1"]
                        innerHtml += '<div class="stats">';
                        innerHtml += '<div class="text">'+ name_1 +'</div>';
                        innerHtml += '<div class="line"><div class="fill" style="width: '+ data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_1] +'%"></div></div>';
                        innerHtml += '<div class="line-text">'+data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_1] / 10.0+'</div></div>'
                        }
                        if (names_count > 2) {
                        var name_2 = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["name_2"]
                        innerHtml += '<div class="stats">';
                        innerHtml += '<div class="text">'+ name_2 +'</div>';
                        innerHtml += '<div class="line"><div class="fill" style="width: '+ data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_2] +'%"></div></div>';
                        innerHtml += '<div class="line-text">'+data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_2] / 10.0+'</div></div>'
                        }
                        if (names_count > 3) {
                        var name_3 = data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"]["name_3"]
                        innerHtml += '<div class="stats">';
                        innerHtml += '<div class="text">'+ name_3 +'</div>';
                        innerHtml += '<div class="line"><div class="fill" style="width: '+ data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_3] +'%"></div></div>';
                        innerHtml += '<div class="line-text">'+data["datasets"][0]["datapoints"][tooltipItem[0]["index"]]["data"][name_3] / 10.0+'</div></div>'
                        }
                    return innerHtml
                },
            },
        },
    }
});

var canvas = document.getElementById('myChart')
canvas.onclick = function (evt) {
    var points = myChart.getElementAtEvent(evt);
    var current_point = datapoints[points[0]._index];
    var turn_id = current_point.data.turn_id,
    recorded_pitch = current_point.data.turn_pitch;
    if(recorded_pitch){
        window.location  = `/admins/dash/turns/${turn_id}/video`;
    }
};

    $('.rating-block').on('click', function(){
        i = 0;
        let id = $(this).attr('id')
        $('.active').removeClass('active');
        $(`#${id}`).addClass('active');
        let chartData = <%= @chartdata.last(6).to_json.html_safe %>
        chartData.forEach(function(cd) {
            datapoints[i].value = ((cd[`${id}`] == undefined) ? undefined : cd[`${id}`]) / 10.0
            i++;
        })
        i = 0;
        datapoints.forEach(function(el){
        if(el.value == undefined){
            data1[i] = el
        }else{
            data1[i] = el.value
        }
            i++;        
        })
        window.myChart.update();
    })

</script>