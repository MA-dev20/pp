<section id="dash_stats">
    <div class="head">
         <%= render partial: 'select_team_user_dropdown', locals: {users: @users, teams: @teams, user: @user} %>
    </div>
    <div class="stats_overview">
        <div class="gesamt active">
            <button class="circle" id="chart_gesamt">
            <span><%= number_with_precision(@current_rating[:rating][:ges].to_f / 10.0, precision: 1) %></span>
            <%= image_tag @user.avatar.quad.url %>
            </button>
            <div class="text" id="t_gesamt">Gesamt</div>
        </div>
        <div class="spontan">
            <button class="circle" id="chart_spontan"><%= number_with_precision( @current_rating[:rating][:spontan].to_f / 10.0, precision:1) %></button>
            <div class="text" id="t_spontan">Spontanität</div>
        </div>
        
        <div class="kreativ">
            <button class="circle" id="chart_kreativ"><%= number_with_precision(@current_rating[:rating][:creative].to_f / 10.0, precision:1) %></button>
            <div class="text" id="t_kreativ">Kreativität</div>
        </div>
        
        <div class="body">
            <button class="circle" id="chart_body"><%= number_with_precision(@current_rating[:rating][:body].to_f / 10.0, precision:1) %></button>
            <div class="text" id='t_body'>Körpersprache</div>
        </div>
        
        <div class="rhetorik">
            <button class="circle" id="chart_rhetorik"><%= number_with_precision(@current_rating[:rating][:rhetoric].to_f / 10.0, precision:1) %></button>
            <div class="text" id="t_rhetorik">Rhetorik</div>
        </div>
        <div class="places">
           <div class="first">
               <%= image_tag 'defaults/cup.png' %>
               <div class="txt"><%= @turns.where(place: 1).count %></div>
           </div>
           <div class="second">
               <%= image_tag 'defaults/silver.png' %>

               <div class="txt"><%= @turns.where(place: 2).count %></div>
           </div>
           <div class="third">
               <%= image_tag 'defaults/bronze.png' %>
               <div class="txt"><%= @turns.where(place: 3).count %></div>
           </div>
        </div>
        <ul class="places-ratings">
           <% @result.first(3).each.with_index(1) do |v, k| %>

            <% if v.present? %>
                    <li class="<%= 'current' if v[:user].id == params[:user_id] %>">  
                        <% if v[:user].id == params[:user_id] or k.to_s == "2" %>
                            <%= image_tag "current.png", id: "open-team-scores", style: 'cursor: pointer;'%>
                        <% end %>
                        <div class="rating-c"><%= k %>. <%= v[:user].fname%></div>
                        <div class="rating-d"><%= number_with_precision(v[:rating][:average] / 10, precision: 1)  %></div>
                    </li>
                <% end %>
           <% end %> 
        </ul>
        
        <div class="compare">
            
        <select class="cs-select cs-skin-underline form-field">
            <option value="" disabled selected><%= @user1.fname %> <%= @user1.lname %></option>
            <% @users.each do |u| %>
                    <% if u.id == @user1.id %>
                        <option value="<%= u.id %>" data-link="<%= dash_admin_user_stats_path(@team.id, @user.id) %>" data-class="cs-selected"><%= u.fname %> <%= u.lname %></option>
                    <% elsif @user.id != u.id %>
                    <option value="<%= u.id %>" data-link="<%= dash_admin_compare_user_stats_path(@team.id, @user.id, u.id) %>">
                         <%= u.fname %> <%= u.lname %>
                    </option>
                    <% end %>
            <% end %>
        </select>
        
        </div>
    </div>
    <div class="stats_chart">
        <div class="chart-container">
            <canvas id="Chart"></canvas>
        </div>
    </div>
</section>
<%= render partial: 'statistics_table', locals: {result: @result} %>

<script>
(function() {
[].slice.call( document.querySelectorAll( 'select.cs-select' ) ).forEach(
    function(el) {	
	   new SelectFx(el);
       newTab: false;
    } );
})();
    
var ctx = document.getElementById("Chart");
var datapoints = [NaN, NaN, NaN, NaN, NaN, NaN, NaN ];
var datapoints2 = [NaN, NaN, NaN, NaN, NaN, NaN, NaN ];
var label = [NaN, NaN, NaN, NaN, NaN, NaN, NaN];
var i = 0;
<% @turns_rating.each.with_index do |g,i| %>
    var json_data = <%= g.to_json.html_safe %>
    json_data["word"] = "<%= g.turn.word.name %>";
    datapoints[i] = {value: <%= g.ges / 10.0 %>, data: json_data};


    <% if @turns_rating2[i].present? %>
        var json_data2 = <%= @turns_rating2[i].to_json.html_safe %>
        datapoints2[i] = {value: <%= @turns_rating2[i].ges / 10.0 %>, data:  json_data2};
    <% end %>
    label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
    i++;
<% end %>

var data2 = datapoints2.map(el => {
                return el.value
            });
var data1 = datapoints.map(el => {
                return el.value
            });

function customTooltips(tooltipModel) {
    // Tooltip Element
    var tooltipEl = document.getElementById('chartjs-tooltip');

    // Create element on first render
    if (!tooltipEl) {
        tooltipEl = document.createElement('div');
        tooltipEl.id = 'chartjs-tooltip';
        tooltipEl.innerHTML = `<div class='tooltips'></div>`;
        document.body.appendChild(tooltipEl);
    }

    // Hide if no tooltip
    if (tooltipModel.opacity === 0) {
        tooltipEl.style.opacity = 0;
        return;
    }

    // Set caret Position
    tooltipEl.classList.remove('above', 'below', 'no-transform');
    if (tooltipModel.yAlign) {
        tooltipEl.classList.add(tooltipModel.yAlign);
    } else {
        tooltipEl.classList.add('no-transform');
    }

    function getBody(bodyItem) {
        return bodyItem.lines;
    }

    // Set Text
    if (tooltipModel.body) {
        var titleLines = tooltipModel.title || [];
        var bodyLines = tooltipModel.body.map(getBody);

        var innerHtml = '<div>';

        titleLines.forEach(function(title) {
            innerHtml += '<div><div>' + title + '</div></div>';
        });
        innerHtml += '</div><div>';

        bodyLines.forEach(function(body, i) {
            var colors = tooltipModel.labelColors[i];
            var style = 'background:' + colors.backgroundColor;
            style += '; border-color:' + colors.borderColor;
            style += '; border-width: 2px';
            var span = '<span style="' + style + '"></span>';
            innerHtml += '<div><div>' + span + body + '</div></div>';
        });
        innerHtml += '</div>';

        var tableRoot = tooltipEl.querySelector('div');
        tableRoot.innerHTML = innerHtml;
    }
    var position = this._chart.canvas.getBoundingClientRect();

    // Display, position, and set styles for font
    tooltipEl.style.opacity = 1;
    tooltipEl.style.position = 'absolute';
    tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX-174 + 'px';
    tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY-415 + 'px';
    tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;
    tooltipEl.style.fontSize = tooltipModel.bodyFontSize + 'px';
    tooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;
    tooltipEl.style.padding = tooltipModel.yPadding + 'px ' + tooltipModel.xPadding + 'px';
    tooltipEl.style.pointerEvents = 'none';
}
var user1 = '<%= @user.fname %>';
var user2 = '<%= @user1.fname %>';
var gesamtChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: label,
        datasets: [{
            label: user1,
            data: data1,
            fill:false,
            borderColor:"rgba(255,255,255,1.0)",
            borderWidth: 5,
            pointBorderColor:"rgba(255,255,255,1.0)",
            pointBackgroundColor:"rgba(255,255,255,1.0)",
            pointHoverBackgroundColor:"rgba(255,255,255,1.0)",
            pointHoverBorderColor:"rgba(255,255,255,1.0)",
            pointBorderWidth: 5,
            pointRadius: 5,
            datapoints: datapoints,
            pointHoverRadius: 8,
            lineTension:0,
            extra: datapoints
        }, {
            label: user2,
            data: data2,
            fill: false,
            borderColor:"rgba(255,255,255,0.30)",
            borderWidth: 5,
            pointBorderColor:"rgba(255,255,255,0.30)",
            pointBackgroundColor:"rgba(255,255,255,0.30)",
            pointHoverBackgroundColor:"rgba(255,255,255,0.30)",
            pointHoverBorderColor:"rgba(255,255,255,0.30)",
            pointBorderWidth: 5,
            pointRadius: 1,
            datapoints: datapoints2,
            pointHoverRadius: 1,
            lineTension:0,
            extra: datapoints2
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        legend: {
            display: false,
            labels: {
                usePointStyle: true,
            },
        },
        title: {
            display: false,
        },
        tooltips: {
            mode: 'index',
            enabled: false,
            multiKeyBackground:"rgba(255,255,255,0)",
            intersect: false,
            dataPoints: datapoints,
            custom: customTooltips,

            callbacks: {
                title: function(tooltipItem, data) {
                  
                  if(data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]){

                    var creative1 = data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["creative"] / 10
                    var ges = data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["ges"] / 10
                    var spontan1 = data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["spontan"] / 10
                    var body1 = data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["body"] / 10
                    var rhetorik1 = data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["rhetoric"] / 10
                  }else{
                    var creative1 = 0,
                      spontan1=0,
                      body1=0,
                      rhetorik1=0;
                  }
                  if(data["datasets"][1]["datapoints"][tooltipItem[0]['index']]["data"]){
                    var creative2 = data["datasets"][1]["datapoints"][tooltipItem[0]['index']]["data"]["creative"] / 10
                    var spontan2 = data["datasets"][1]["datapoints"][tooltipItem[0]['index']]["data"]["spontan"] / 10
                    var body2 = data["datasets"][1]["datapoints"][tooltipItem[0]['index']]["data"]["body"] / 10
                    var rhetorik2 = data["datasets"][1]["datapoints"][tooltipItem[0]['index']]["data"]["rhetoric"] / 10
                  }else{
                    var creative2 = 0,
                      spontan2=0,
                      body2=0,
                      rhetorik2=0;
                  }
                  var val =` 
                    <div class="progress-block">
                        <div class="progress-top">
                            <h6>`+tooltipItem[0]["xLabel"]+`</h6>
                            <h3>`+data["datasets"][0]["datapoints"][tooltipItem[0]['index']]["data"]["word"]+`</h3>
                            <div id="dash_stats">
                                <div class="rhetorik rhetorik-ge">
                                    <button class="circle" id="chart_rhetorik">`+ges+`</button>
                                    <div class="text" id="t_rhetorik">Gesamt</div>
                                </div>
                                <div class="rhetorik rhetorik-ts">
                                    <button class="circle" id="chart_rhetorik">7.3</button>
                                    <div class="text" id="t_rhetorik">Teamschnitt</div>
                                </div>
                                <div class="rhetorik rhetorik-mb">
                                    <button class="circle" id="chart_rhetorik">8.4</button>
                                    <div class="text" id="t_rhetorik">Meine Bewertung</div>
                                </div>
                            </div>
                        </div>
                        <div class="progress-main">
                          <div class="progressBar">
                            <div class="progress-bar-text">Spontanitat</div>
                            <div class="progress-bar-pop">
                              <div class="progress-bar-con progress-con-t">
                                <div class="progressbar-view">
                                  <div class="progressbar-fill" style="width: `+spontan1/10*100+`% !important;"></div>
                                </div>
                                <div class="progress-bar-value">`+spontan1+`</div>
                              </div>`;
                              if(data["datasets"][1]){
                                val+=`
                                  <div class="progress-bar-con progress-con-b">
                                    <div class="progressbar-view">
                                      <div class="progressbar-fill" style="width: `+spontan2/10*100+`% !important;"></div>
                                    </div>
                                    <div class="progress-bar-value">`+spontan2+`</div>
                                  </div>` ;     
                              }
                              val+=`
                            </div>
                          </div>
                          <div class="progressBar">
                            <div class="progress-bar-text">Kreativitat</div>
                            <div class="progress-bar-pop">
                              <div class="progress-bar-con progress-con-t">
                                <div class="progressbar-view">
                                  <div class="progressbar-fill" style="width: `+creative1/10*100+`% !important;"></div>
                                </div>
                                <div class="progress-bar-value">`+creative1+`</div>
                              </div>
                              `;
                              if(data["datasets"][1]){
                                val+=`
                                  <div class="progress-bar-con progress-con-b">
                                    <div class="progressbar-view">
                                      <div class="progressbar-fill" style="width: `+creative2/10*100+`% !important;"></div>
                                    </div>
                                    <div class="progress-bar-value">`+creative2+`</div>
                                  </div>`
                              }
                              
                              val+=`
                            </div>
                          </div>
                          <div class="progressBar">
                            <div class="progress-bar-text">Korpersprache</div>
                            <div class="progress-bar-pop">
                              <div class="progress-bar-con progress-con-t">
                                <div class="progressbar-view">
                                  <div class="progressbar-fill" style="width: `+body1/10*100+`% !important;"></div>
                                </div>
                                <div class="progress-bar-value">`+body2+`</div>
                              </div>`;
                              if(data["datasets"][1]){
                                val+=` <div class="progress-bar-con progress-con-b">
                                    <div class="progressbar-view">
                                      <div class="progressbar-fill" style="width: `+body2/10*100+`% !important;"></div>
                                    </div>
                                    <div class="progress-bar-value">`+body2+`</div>
                                  </div>`;
                              }

                              
                              val+=`
                            </div>
                          </div>
                          <div class="progressBar">
                            <div class="progress-bar-text">Rhetorik</div>
                            <div class="progress-bar-pop">
                              <div class="progress-bar-con progress-con-t">
                                <div class="progressbar-view">
                                  <div class="progressbar-fill" style="width: `+rhetorik1/10*100+`% !important;"></div>
                                </div>
                                <div class="progress-bar-value">`+rhetorik1+`</div>
                              </div>
                              `;
                              if(data["datasets"][1]){
                                 val+=`
                                  <div class="progress-bar-con progress-con-b">
                                    <div class="progressbar-view">
                                      <div class="progressbar-fill" style="width: `+rhetorik2/10*100+`% !important;"></div>
                                    </div>
                                    <div class="progress-bar-value">`+rhetorik2+`</div>
                                  </div>
                                  `;
                              }
                              val+=`
                            </div>
                          </div>
                        </div>
                    </div>
                    ` 
                            return val
                },
                label: function(tooltipItem, data) {
                  // return data['datasets'][0]['data'][tooltipItem['index']];
                },
                afterLabel: function(tooltipItem, data) {
                  // var dataset = data['datasets'][0];
                  // var percent = Math.round((dataset['data'][tooltipItem['index']] / dataset["_meta"][0]['total']) * 100)
                  // return '(' + percent + '%)';
                }
            },

        },
        scales: {
            yAxes: [{
                gridLines: {
                    display: true,
                    color:"rgba(255,255,255,1.0)",
                    lineWidth: 0.2,
                    zeroLineColor: "rgba(255,255,255,0)",
                },
                ticks: {
                    suggestedMin: 0,
                    suggestedMax: 10,
                    stepSize: 1,
                    fontColor:"rgba(255,255,255,1.0)",
                }
            }],
            xAxes: [{
                gridLines: {
                    display: false,
                    color:"rgba(255,255,255,1.0)",
                    lineWidth: 0.2,
                },
                ticks: {
                    fontColor:"rgba(255,255,255,1.0)",
                }
            }],
        },
    }
});
document.getElementById('chart_gesamt').addEventListener('click', function() {
    $('.active').removeClass('active');
    $('.gesamt').addClass('active');
    var i = 0;
    <% @turns_rating.each do |g| %>
        datapoints[i] = <%= g.ges / 10.0 %>;
        <% if Turn.where(game_id: g.game_id, user_id: @user1.id).count >= 1 %>
            datapoints2[i] = <%= TurnRating.where(game_id: g.game_id, user_id: @user1.id).first.ges / 10.0 %>
        <% end %>
        label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
        i++;
    <% end %>
    window.gesamtChart.update();
});
document.getElementById('chart_spontan').addEventListener('click', function() {
    $('.active').removeClass('active');
    $('.spontan').addClass('active');
    var i = 0;
    <% @turns_rating.each do |g| %>
        datapoints[i] = <%= g.spontan / 10.0 %>;
        <% if Turn.where(game_id: g.game_id, user_id: @user1.id).count >= 1 %>
            datapoints2[i] = <%= TurnRating.where(game_id: g.game_id, user_id: @user1.id).first.spontan / 10.0 %>
        <% end %>
        label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
        i++;
    <% end %>
    window.gesamtChart.update();
});
document.getElementById('chart_kreativ').addEventListener('click', function() {
    $('.active').removeClass('active');
    $('.kreativ').addClass('active');
    var i = 0;
    <% @turns_rating.each do |g| %>
        datapoints[i] = <%= g.creative / 10.0 %>;
        <% if Turn.where(game_id: g.game_id, user_id: @user1.id).count >= 1 %>
            datapoints2[i] = <%= TurnRating.where(game_id: g.game_id, user_id: @user1.id).first.creative / 10.0 %>
        <% end %>
        label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
        i++;
    <% end %>
    window.gesamtChart.update();
});
document.getElementById('chart_body').addEventListener('click', function() {
    $('.active').removeClass('active');
    $('.body').addClass('active');
    var i = 0;
    <% @turns_rating.each do |g| %>
        datapoints[i] = <%= g.body / 10.0 %>;
        <% if Turn.where(game_id: g.game_id, user_id: @user1.id).count >= 1 %>
            datapoints2[i] = <%= TurnRating.where(game_id: g.game_id, user_id: @user1.id).first.body / 10.0 %>
        <% end %>
        label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
        i++;
    <% end %>
    window.gesamtChart.update();
});
document.getElementById('chart_rhetorik').addEventListener('click', function() {
    $('.active').removeClass('active');
    $('.rhetorik').addClass('active');
    var i = 0;
    <% @turns_rating.each do |g| %>
        datapoints[i] = <%= g.rhetoric / 10.0 %>;
        <% if Turn.where(game_id: g.game_id, user_id: @user1.id).count >= 1 %>
            datapoints2[i] = <%= TurnRating.where(game_id: g.game_id, user_id: @user1.id).first.rhetoric / 10.0 %>
        <% end %>
        label[i] = '<%= g.created_at.strftime("%d.%m.%Y") %>';
        i++;
    <% end %>
    window.gesamtChart.update();
});


</script>