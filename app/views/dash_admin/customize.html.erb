<div class="customize">
	<% if @catchword %>
	<div class="customize-sm edit-catchword-wrapper" id="editCatchword">
    	<div class="karte">
        	<%= link_to '', dash_admin_customize_path, class: 'back small fas fa-arrow-left' %>
			<div class="head small left">Catchwords bearbeiten</div>
			<div id="edit_catchword_scroll">
				<%= form_for(:basket, url: edit_basket_path(@catchword), html: {id: 'edit_catchword_form'}) do |f| %>
					<% if flash[:basket_name] %>
						<label>Name der Liste
							<div class="alert alert-label"><%= flash[:basket_name] %></div>
						</label>
						<%= f.text_field :name, class: 'field red', value: @catchword.name %>
					<% else %>
						<label>Name der Liste</label>
						<%= f.text_field :name, class: 'field', value: @catchword.name %>
					<% end %>
					<%= f.hidden_field :admin_id, value: @admin.id %>
					<%= f.hidden_field :site, value: 'admin_dash' %>
					<div class="divider"></div>
					<%#= f.submit 'speichern', class: 'btn btn-green' %>
				<% end %>
				<%= form_for(:word, url: new_word_path(@catchword)) do |f| %>
					<label>Catchword hinzufügen
						<% if flash[:word_name] %>
							<div class="alert alert-label"><%= flash[:word_name] %></div>
						<% end %>
					</label>
					<div class="field <% if flash[:word_name] %>red<% end %>">
						<%= f.text_field :name, class: 'custom-submit-field', autofocus: true %>
						<%= f.hidden_field :site, value: 'admin_dash' %>
						<%= f.submit "+", class: 'custom-submit' %>
					</div>
				<% end %>
				<table>
					<thead>
						<tr onclick="sortTable('catchword-table', 'catchword-sorter')">
							<th>Catchwords <i class="fas fa-sort" id="catchword-sorter"></i></th>
							<th></th>
							<th></th>
							<th></th>
						</tr>
					</thead>
				</table>
				<div class="table-content" id="table_content" style="<%= 'height: 2vh' unless @catchword.words.count > 0 %>">
					<table class="table" id="catchword-table">
						<tbody>
							<% @catchword.words.each do |word| %>
								<tr>
									<td><%= word.name %></td>
									<td id="recording<%= word.id %>" class="record" onclick="recordAudio(<%=word.id %>, 'word')">
										<%= image_tag 'dash/icons/record.png', class: 'recButton record' %>
										<%= image_tag 'dash/icons/stop.png', class: 'recButton pause' %>
									</td>
									<td id="word<%= word.id %>" class="record" data-url="<%= word.sound.url %>" onclick="playWord(<%=word.id %>, 'word')">
										<%= image_tag 'dash/icons/play.png', class: 'play' %>
										<i class="far fa-pause-circle pause"></i>
									</td>
									<td>
										<%= link_to image_tag('dash/icons/minus.png'), destroy_word_path(@catchword, word) %>
									</td>
								</tr>
							<% end %>
						</tbody>
					</table>
				</div>
				<button id="edit_catchword_form_btn" class="btn btn-green">speichern</button>			
				<i class="remove far fa-trash-alt" onclick="toggleDeleteCatchwordModal()"></i>
			</div>
    	</div>
	</div>
<script> new PerfectScrollbar('#edit_catchword_scroll'); </script>	
<script> new PerfectScrollbar('#table_content'); </script>
	<% else %>
	<div class="customize-sm" id="catchwords">
    	<!-- <div class="searchbar">
        	<%= image_tag 'dash/icons/search.png', id: 'search-icon' %>
        	<input type="text" placeholder="Liste suchen" id="searchCW">
    	</div>
    	<button class="btn btn-green" onclick="showNewCatchword()">Liste erstellen</button> -->
		<div class="karte" id="catchwords">
			<div class="head-flex">
				<div class="left">Catchwords</div>
				<div class="right"><button class="custom-submit" onclick="showNewCatchword()">+</button></div>	
			</div>
        	<div class="list" id="catchword-list">
            	<% @catchwords.each do |c| %>
                <div class="list-karte CWsearch" onclick="redirect('<%= dash_admin_catchwords_url(c.id) %>')">
                    <% 
                        cw_img = c.image.present? ? c.image : 1
                        img_url = "dash/randomBGpics/Catchwords/#{cw_img}.jpg"
                    %>
                <div class="pic" style="background-image: url(<%= image_url(img_url) %>)"></div>
                <div class="bottom">
                	<div class="name"><%= c.name %></div>
                    	<div class="count"><%= c.words.size %></div>
                    </div>
                </div>
            	<% end %>
        	</div>
    	</div>
	</div>
<script>new PerfectScrollbar('#catchword-list');</script>
	<div class="customize-sm" id="newCatchword">
    	<div class="karte">
	        <i class="back small fas fa-arrow-left" onclick="hideNewCatchword()"></i>
        	<div class="head left small">Catchwords hinzufügen</div>
        	<%= form_for(:basket, url: new_basket_path()) do |f| %>
            	<% if flash[:cbasket_name] %>
            	<label>Name der Liste
            		<div class="alert alert-newCW"><%= flash[:cbasket_name] %></div>
            	</label>
            	<%= f.text_field :name, class: 'field red', autofocus: true  %>
            	<% else %>
            	<label>Name der Liste</label>
            	<%= f.text_field :name, class: 'field', autofocus: true  %>
            	<% end %>
            	<%= f.hidden_field :admin_id, value: @admin.id %>
            	<%= f.hidden_field :site, value: 'admin_dash' %>
            	<div class="divider"></div>
            	<%= f.submit 'speichern', class: 'btn btn-green' %>
        	<% end %>
    	</div>
	</div>
	<% end %>

	<% if @objection %>
	<div class="customize-sm edit-objection-wrapper" id="editObjection">
    	<div class="karte">
        	<%= link_to "", dash_admin_customize_path, class: 'back small fas fa-arrow-left' %>
			<div class="head small left">Einwände bearbeiten</div>
			<div id="edit_objection_scroll">
				<%= form_for(:basket, url: edit_basket_path(@objection), html: {id: 'edit_objection_form'}) do |f| %>
					<% if flash[:basket_name] %>
						<label for="">Name der Liste
							<div class="alert"><%= flash[:basket_name] %></div>
						</label>
						<%= f.text_field :name, class: 'field red', value: @objection.name %>
					<% else %>
						<label for="">Name der Liste</label>
						<%= f.text_field :name, class: 'field', value: @objection.name %>
					<% end %>
					<%= f.hidden_field :admin_id, value: @admin.id %>
					<%= f.hidden_field :site, value: 'admin_dash' %>
					<%= f.hidden_field :type, value: 'objection' %>
					<div class="divider"></div>
					<%#= f.submit 'speichern', class: 'btn btn-green' %>
				<% end %>
				<%= form_for(:objection, url: new_objection_path(@objection)) do |f| %>
					<label>Einwand hinzufügen
						<% if flash[:objection_name] %>
						<div class="alert alert-label"><%= flash[:objection_name] %></div>
						<% end %>
					</label>
					<div class="field <% if flash[:objection_name] %>red<% end %>">
						<%= f.text_field :name, class: 'custom-submit-field', value: '', autofocus: true %>
						<%= f.hidden_field :site, value: 'admin_dash' %>
						<%= f.submit "+", class: 'custom-submit' %>
					</div>
				<% end %>
				<table>
					<thead>
						<tr onclick="sortTable('objection-table', 'objection-sorter')">
							<th>Einwände <i class="fas fa-sort" id="objection-sorter"></i></th>
							<th></th>
							<th></th>
							<th></th>
						</tr>
					</thead>
				</table>
				<div class="table-content" id="table_content" style="<%= 'height: 2vh' unless @objection.objections.count > 0 %>">
					<table class="table" id='objection-table'>
						<tbody>
							<% @objection.objections.each do |o| %>
							<tr>
								<td><%= o.name %></td>
								<td id="orecording<%= o.id %>" class="record" onclick="recordAudio(<%= o.id %>, 'objection')">
									<%= image_tag 'dash/icons/record.png', class: 'recButton record' %>
									<%= image_tag 'dash/icons/stop.png', class: 'recButton pause' %>
								</td>
								<td id="objectionWord<%= o.id %>" class="record" data-url="<%= o.sound.url %>" onclick="playWord(<%= o.id %>, 'objection')">
									<%= image_tag 'dash/icons/play.png', class: 'play' %>
									<i class="far fa-pause-circle pause"></i>
								</td>
								<td>
									<%= link_to image_tag('dash/icons/minus.png'), destroy_objection_path(@objection, o.id) %>
								</td>
							</tr>
							<% end %>
						</tbody>
					</table>
				</div>
				<button id="edit_objection_form_btn" class="btn btn-green">speichern</button>			
				<i class="remove far fa-trash-alt" onclick="toggleDeleteCatchwordModal()"></i>
			</div>
    	</div>
	</div>
<script> new PerfectScrollbar('#edit_objection_scroll'); </script>
<script> new PerfectScrollbar('.edit-objection-wrapper #table_content'); </script>
	<% else %>
		<div class="customize-sm" id="objections">
    	<!-- <div class="searchbar">
        	<%= image_tag 'dash/icons/search.png', id: 'search-icon' %>
        	<input type="text" placeholder="Liste suchen" id="searchOB">
    	</div>
    	<button class="btn btn-green" onclick="showNewObjection()">Liste erstellen</button> -->
    	<div class="karte">
			<div class="head-flex">
				<div class="left">Einwände</div>
				<div class="right"><button class="custom-submit" onclick="showNewObjection()">+</button></div>	
			</div>
			<!-- <div class="head left">Einwände</div> -->
        	<!-- <div class="head right">Einwände</div>			 -->
        	<div class="list" id="objection-list">
            	<% @objections.each do |o| %>
                <% 
                    obj_img = o.image.present? ? o.image : 1
                    img_url = "dash/randomBGpics/Objections/#{obj_img}.jpg"
                %>
                <div class="list-karte OBsearch" onclick="redirect('<%= dash_admin_objections_url(o.id) %>')">
                    <div class="pic" style="background-image: url(<%= image_url(img_url) %>)">
                    </div>
                    <div class="bottom">
                        <div class="name"><%= o.name %></div>
                        <div class="count"><%= o.objections.size %></div>
                    </div>
                </div>
            	<% end %>
        	</div>
    	</div>
	</div>
<script>new PerfectScrollbar('#objection-list');</script>
	<div class="customize-sm" id="newObjection">
    	<div class="karte">
        	<i class="back small fas fa-arrow-left" onclick="hideNewObjection()"></i>
        	<div class="head left small">Einwand hinzufügen</div>
        	<%= form_for(:basket, url: new_basket_path()) do |f| %>
            	<% if flash[:obasket_name] %>
                	<label for="">Name der Liste
                		<div class="alert"><%= flash[:obasket_name] %></div>
                	</label>
                	<%= f.text_field :name, class: 'field red' %>
            	<% else %>
                	<label for="">Name der Liste</label>
                	<%= f.text_field :name, class: 'field' %>
            	<% end %>
            	<%= f.hidden_field :admin_id, value: @admin.id %>
            	<%= f.hidden_field :site, value: 'admin_dash' %>
            	<%= f.hidden_field :type, value: 'objection' %>
            	<div class="divider"></div>
            	<%= f.submit 'speichern', class: 'btn btn-green' %>
        	<% end %>
    	</div>
	</div>
	<% end %>

	<div class="customize-sm" id="words">
		<div class="karte">
			<div class="head left">Wortwahl</div>
			<div class="custom-select custom-select-lg" onclick="toggleDoSelect()">
				<div class="selected" id="selected_word">
					<% if params[:words] == 'dont' %>
						Don't say
					<% else %>
						Do say
					<% end %>
				</div>
				<div class="links" id="doWordSelect">
					<div class="do" onclick="showDoes()">Do say</div>
					<div class="dont" onclick="showDonts()">Don't say</div>
				</div>
			</div>
			<div class="do" id="do_words" <% if params[:words] == 'dont' %> style="display: none" <% end %>>
				<%= form_for(:words, url: do_words_path()) do |f| %>
					<div class="field">
					<%= f.text_field :word, placeholder: 'Do say hinzufügen', class: 'custom-submit-field' %>
					<%= f.hidden_field :do, value: true %>
					<%= f.submit "+", class: 'custom-submit' %>
					</div>
				<% end %>
				<div class="table" id="do_table">
				<table>
					<% if !@admin.does.nil? %>
					<% @admin.does.each do |w| %>
					<tr>
						<td><%= w %></td>
						<td><%= link_to image_tag('dash/icons/minus.png'), delete_do_word_path(w) %></td>
					</tr>
					<% end %>
					<% end %>
				</table>
				</div>
			</div>
			<script>new PerfectScrollbar('#do_table');</script>
			<div class="donts" id="dont_words" <% if params[:words] != 'dont' %> style="display: none" <% end %>>
				<%= form_for(:words, url: do_words_path()) do |f| %>
					<div class="field">
					<%= f.text_field :word, placeholder: "Don't say hinzufügen",class: 'custom-submit-field' %>
					<%= f.hidden_field :do, value: false %>
					<%= f.submit "+", class: 'custom-submit' %>
					</div>
				<% end %>
				<div class="table" id="dont_table">
				<table>
					<% if !@admin.donts.nil? %>
					<% @admin.donts.each do |w| %>
					<tr>
						<td><%= w %></td>
						<td><%= link_to image_tag('dash/icons/minus.png'), delete_dont_word_path(w) %></td>
					</tr>
					<% end %>
					<% end %>
				</table>
				</div>
				<script>new PerfectScrollbar('#dont_table');</script>
			</div>
			
		</div>
	</div>

	<% if @custom_rating %>
	<div class="customize-sm edit-ratings-wrapper" id="editCustomRating">
		<div class="karte">
			<%= link_to '', dash_admin_customize_path, class: 'back small fas fa-arrow-left' %>
			<div class="head small left">Ratings bearbeiten</div>
			<div id="edit_rating">
				<%= form_for(:rating, url: edit_custom_rating_path(@custom_rating), html: {id: 'edit_form'}) do |f| %>
					<% if flash[:custom_rating_update] %>
						<label>Name der Liste
							<div class="alert alert-label"><%= flash[:custom_rating_update] %></div>
						</label>
						<%= f.text_field :name, class: 'field red', value: @custom_rating.name %>
					<% else %>
						<label>Name der Liste</label>
						<%= f.text_field :name, class: 'field', value: @custom_rating.name %>
					<% end %>
					<%= f.hidden_field :admin_id, value: @admin.id %>
					<%= f.hidden_field :site, value: 'admin_dash' %>
					<div class="divider"></div>
					<%#= f.submit 'speichern', class: 'btn btn-green' %>
				<% end %>
				<%= form_for(:criteria, url: new_rating_criteria_path(@custom_rating)) do |f| %>
						<label>Rating hinzufügen
						<% if flash[:rating_name] %>
							<div class="alert alert-label"><%= flash[:rating_name] %></div>
						<% end %>
						</label>
						<div class="field <% if flash[:rating_name] %>red<% end %>">
							<%= f.text_field :name, class: 'custom-submit-field', autofocus: true %>
							<%= f.hidden_field :site, value: 'admin_dash' %>
							<%= f.submit "+", class: 'custom-submit' %>
						</div>
				<% end %>
				<table>
					<thead>
						<tr onclick="sortTable('rating-table', 'rating-sorter')">
							<th>Ratings <i class="fas fa-sort" id="rating-sorter"></i></th>
							<th></th>
							<th></th>
							<th></th>
						</tr>
					</thead>
				</table>
				<div class="table-content" id="rating_table_content" style="<%= 'height: 2vh' unless @custom_rating.rating_criteria.count > 0 %>">
					<table class="table" id="rating-table">
						<tbody>
							<% @custom_rating.rating_criteria.each do |rating| %>
								<tr>
									<td><%= rating.name %></td>
									<td>
										<%= link_to image_tag('dash/icons/minus.png'), destroy_rating_criteria_path(@custom_rating, rating) %>
									</td>
								</tr>
							<% end %>
						</tbody>
					</table>
				</div>
				<button id="edit_form_btn" class="btn btn-green">speichern</button>
				<i class="remove far fa-trash-alt" onclick="toggleDeleteCatchwordModal()"></i>
			</div>
		</div>
	</div>
	<script> new PerfectScrollbar('#edit_rating'); </script>
	<script> new PerfectScrollbar('#rating_table_content'); </script>
	<% else %>
	<div class="customize-sm" id="custom_rating">
			<!-- <div class="searchbar">
				<%= image_tag 'dash/icons/search.png', id: 'search-icon' %>
				<input type="text" placeholder="Liste suchen" id="searchCR">
			</div>
			<button class="btn btn-green" onclick="showNewCustomRating()">Liste erstellen</button> -->
			<div class="karte" id="custom_rating">
				<div class="head-flex">
					<div class="left">Custom Ratings</div>
					<div class="right"><button class="custom-submit" onclick="showNewCustomRating()">+</button></div>	
				</div>
				<div class="list" id="rating-list">
					<% @custom_ratings.includes(:rating_criteria).each do |rating| %>
						<% unless rating.name == 'PP' %>
							<div class="list-karte CRsearch" onclick="redirect('<%= dash_admin_custom_rating_path(rating.id) %>')">
								<% 
									rating_img = rating.image.present? ? rating.image : 1
									img_url = "dash/randomBGpics/Catchwords/#{rating_img}.jpg"
								%>
							<div class="pic" style="background-image: url(<%= image_url(img_url) %>)"></div>
							<div class="bottom">
								<div class="name"><%= rating.name %></div>
									<div class="count"><%= rating.rating_criteria.size %></div>
								</div>
							</div>
						<% end %>
					<% end %>
				</div>
			</div>
	</div>
	<script> new PerfectScrollbar('#rating-list'); </script>
	<div class="customize-sm hidden" id="newCustomRating">
		<div class="karte">
			<i class="back small fas fa-arrow-left" onclick="hideNewCustomRating()"></i>
			<div class="head left small">Ratings hinzufügen</div>
			<%= form_for(:rating, url: new_custom_rating_path()) do |f| %>
				<% if flash[:custom_rating] %>
				<label>Name der Liste
					<div class="alert alert-newCW"><%= flash[:custom_rating] %></div>
				</label>
				<%= f.text_field :name, class: 'field red', autofocus: true  %>
				<% else %>
				<label>Name der Liste</label>
				<%= f.text_field :name, class: 'field', autofocus: true  %>
				<% end %>
				<%= f.hidden_field :admin_id, value: @admin.id %>
				<div class="divider"></div>
				<%= f.submit 'speichern', class: 'btn btn-green' %>
			<% end %>
		</div>
	</div>
	<% end %>
	
	<% if @catchword %>
	<div class="fullscreen-blur" id="deleteCatchword">
		<div class="karte">
			<div class="head">Liste löschen?</div>
			<div class="body">
				Bist du sicher das du die Catchwords unwiederuflich löschen möchtest?
			</div>
			<div class="bottom" style="display: flex;">
				<%= link_to 'löschen', destroy_basket_path(@catchword, 'dash_admin'), class: 'btn btn-green' %>
				<button class="btn btn-green" onclick="toggleDeleteCatchwordModal()">Close</button>
			</div>
		</div>
	</div>
	<% end %>
	<% if @objection %>
	<div class="fullscreen-blur" id="deleteCatchword">
		<div class="karte">
			<div class="head">Liste löschen?</div>
			<div class="body">
				Bist du sicher das du die Einwände unwiederuflich löschen möchtest?
			</div>
			<div class="bottom" style="display: flex;">
				<%= link_to 'löschen', destroy_basket_path(@objection, 'dash_admin'), class: 'btn btn-green' %>
				<button class="btn btn-green" onclick="toggleDeleteCatchwordModal()">Close</button>
			</div>
		</div>
	</div>
	<% end %>
	<% if @custom_rating %>
	<div class="fullscreen-blur" id="deleteCatchword">
		<div class="karte">
			<div class="head">Liste löschen?</div>
			<div class="body">
				Bist du sicher das du die Einwände unwiederuflich löschen möchtest?
			</div>
			<div class="bottom" style="display: flex;">
				<%= link_to 'löschen', destroy_custom_rating_path(@custom_rating, 'dash_admin'), class: 'btn btn-green' %>
				<button class="btn btn-green" onclick="toggleDeleteCatchwordModal()">Close</button>
			</div>
		</div>
	</div>
	<% end %>
	<div class="fullscren-blur" id="help-popup">
	</div>
<style>
    .record-img {
        height: 2.35vh;
        width: 2.35vh;
    }

    .record {
        cursor: pointer;
    }

    .opacity-class {
        opacity: 0.6;
    }

    .stop-img-icon, 
    .record-img-icon {
        display: none;
    }

    .table-content button {
    margin: 1vh 0.5vh;
    height: 2vh;
    width: 2vh;
	font-size: 0;
	background-color: red;
	border: 0;
	border-radius: 35px;
	outline: none;
}

/* .notRec{
	background-color: darkred !important;
} */
.stop-img,
.Rec{
	animation-name: pulse;
	animation-duration: 1.3s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

.scrollable-content {
	overflow-y: scroll;
}

@keyframes pulse{
	0%{
		box-shadow: 0 0 0.3vh 0 rgba(173,0,0,.3);
	}
	65%{
		box-shadow: 0 0 0.5vh 0.6vh rgba(173,0,0,.3);
	}
	90%{
		box-shadow: 0 0 0.5vh 0.9vh rgba(173,0,0,0);
	}
}

</style>

<script>

	$('#edit_form_btn').click(function(){
		$('#edit_form').submit();
	})

	$('#edit_catchword_form_btn').click(function(){
		$('#edit_catchword_form').submit();
	})

	$('#edit_objection_form_btn').click(function(){
		$('#edit_objection_form').submit();
	})

	$('#content').addClass('scrollable-content');

	function toggleDeleteCatchwordModal() {
		$("#deleteCatchword").toggle();
	}

var stream, form, globalForm,recorder, audio, timer;
  globalForm = new FormData();
  var processing= false;
  audio = new Audio();

    function recordAudio(id, type) {
        if (type == 'word') {
            if (!processing) {
            	$('#word'+ id).addClass('opacity-class');
                $("#recording" + id + ' > .record').hide();
				$("#recording" + id + ' > .pause').show();
                requestAudio(id, 'word')
                processing = true
            } else {
                stopRecording(id, 'word')
            }
        } else {
            if (!processing) {
            	$('#objectionWord'+ id).addClass('opacity-class');
                $("#orecording" + id + ' > .record').hide();
				$("#orecording" + id + ' > .pause').show();
                requestAudio(id, 'objection');
                processing = true;
            } else {
                stopRecording(id, 'objection')
            }
        }
    }

    function playWord(id, type) {
        if (type == 'word') {
            var url = $("#word" + id).data("url")
            if (!$("#word" + id).hasClass("opacity-class")) {
                if (!audio.paused) {
                    audio.pause();
					$('#word' + id + " > .pause").hide();
					$('#word' + id + " > .play").show();
                } else {
                  	audio = new Audio(url);
                	audio.play();
					$('#word' + id + " > .play").hide();
					$('#word' + id + " > .pause").show();
					audio.addEventListener('ended',function() {
						$('#word' + id + " > .pause").hide();
						$('#word' + id + " > .play").show();
					});
				}
            }
        } else {
            var url = $("#objectionWord" + id).data("url")
            if (!$("#objectionWord" + id).hasClass("opacity-class")) {
                if (!audio.paused) {
                    audio.pause()
					$("#objectionWord" + id + " > .pause").hide();
					$("#objectionWord" + id + " > .play").show();
                } else {
                	audio = new Audio(url)
                	audio.play()
					$("#objectionWord" + id + " > .play").hide();
					$("#objectionWord" + id + " > .pause").show();
					audio.addEventListener('ended',function() {
						$("#objectionWord" + id + " > .play").show();
						$("#objectionWord" + id + " > .pause").hide();
					});
				}
            }
        }

    }

    function createObjection(id, globalForm, type) {
            var url = ''
            if (type == 'word') {
                url = '/admin/dash/words/'
            } else {
                url = '/admin/dash/objections/'
            }
            $.ajax({
                url: url + id,
                type: 'put',
                cache: false,
                async: true,
                contentType: false,
                processData: false,
                data: globalForm,
                beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
                success: function (res) {
                    globalForm = new FormData();
                    if (type == 'word') {
                        $("#word" + id).data("url", res.sound)
                        $('#word'+ id).removeClass('opacity-class');
                    } else {
                        $("#objectionWord" + id).data("url", res.sound)
                        $('#objectionWord'+ id).removeClass('opacity-class');
                    }
                }
            })
        }



    function requestAudio(id, type) {
        var seconds = 10;
        navigator.mediaDevices.getUserMedia({ audio: true }).then(str => {
            const chunks = [];
            stream = str;
            recorder = new MediaRecorder(stream);
            recorder.ondataavailable = e => {
                seconds -= 1
                chunks.push(e.data);
                // $("#word"+id).parent().addClass("opacity-class")
                if (recorder.state == 'inactive') {
                    const blob = new Blob(chunks, { type: 'audio/webm' });
                    var file = new window.File([blob], ['audio', (new Date() + '').slice(4, 28), '.mp3'].join(''))
                    globalForm.append("file", file);
                    if (type == 'word') {
                        if ($("#recording" + id).children().hasClass('stop-img')) {
                            $("#recording" + id).children().removeClass('stop-img').addClass('record-img');
                            record_img = $("#recording" + id).children()[0]
                            $(record_img).attr('src', $('.record-img-icon').attr('src'))
                            $('#word'+ id).removeClass('opacity-class');
                        }
                        createObjection(id, globalForm, 'word')
                    } else {
                        if ($("#orecording" + id).children().hasClass('stop-img')) {
                            $("#orecording" + id).children().removeClass('stop-img').addClass('record-img');
                            record_img = $("#orecording" + id).children()[0]
                            $(record_img).attr('src', $('.record-img-icon').attr('src'))
                            $('#objectionWord'+ id).removeClass('opacity-class');
                        }
                        createObjection(id, globalForm, 'objection')
                    }
                    processing = false;
                }
            };
            recorder.start(1000);
            timer = setTimeout(() => {
                stopRecording(id, type)
            }, 11000);
        }).catch(console.error);
    }

    function stopRecording(id, type) {
        clearTimeout(timer);
        if (recorder.state != 'inactive') {
            recorder.stop()
        }
        if (type == 'word') {
            $("#recording" + id + ' > .record').show();
			$("#recording" + id + ' > .pause').hide();
			$('#word'+ id).removeClass('opacity-class');
        } else {
            $("#orecording" + id + ' > .record').show();
			$("#orecording" + id + ' > .pause').hide();
			$('#objectionWord'+ id).removeClass('opacity-class');
        }
        stream.getTracks()[0].stop()
    }




/* search Catchwords */
        $('#searchCW').keyup(function() {
            $rows = $('.CWsearch');
            var val = '^(?=.*\\b' + $.trim($(this).val()).split(/\s+/).join('\\b)(?=.*\\b') + ').*$',
            reg = RegExp(val, 'i'),
            text;
        $rows.show().filter(function() {
            text = $(this).find('.name').text().replace(/\s+/g, ' ');
            return !reg.test(text);
        }).hide();
        })
    /* search Objections */
        $('#searchOB').keyup(function() {
            $rows = $('.OBsearch');
            var val = '^(?=.*\\b' + $.trim($(this).val()).split(/\s+/).join('\\b)(?=.*\\b') + ').*$',
            reg = RegExp(val, 'i'),
            text;
        $rows.show().filter(function() {
            text = $(this).find('.name').text().replace(/\s+/g, ' ');
            return !reg.test(text);
        }).hide();
		})
		/* search Ratings */
        $('#searchCR').keyup(function() {
            $rows = $('.CRsearch');
            var val = '^(?=.*\\b' + $.trim($(this).val()).split(/\s+/).join('\\b)(?=.*\\b') + ').*$',
            reg = RegExp(val, 'i'),
            text;
        $rows.show().filter(function() {
            text = $(this).find('.name').text().replace(/\s+/g, ' ');
            return !reg.test(text);
        }).hide();
        })
function sortTable(tableId, sorter) {
  var table, rows, switching, i, x, y, shouldSwitch, sorter;
  table = document.getElementById(tableId);
  sorter = document.getElementById(sorter);
  if (sorter.className == 'fas fa-sort' || sorter.className == 'fas fa-sort-up') {
      switching = true;
      while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 0; i < (rows.length - 1); i++) {
          shouldSwitch = false;
          x = rows[i].getElementsByTagName("TD")[0];
          y = rows[i + 1].getElementsByTagName("TD")[0];
          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
      sorter.className = 'fas fa-sort-down';
  } else if (sorter.className == 'fas fa-sort-down') {
      switching = true;
      while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 0; i < (rows.length - 1); i++) {
          shouldSwitch = false;
          x = rows[i].getElementsByTagName("TD")[0];
          y = rows[i + 1].getElementsByTagName("TD")[0];
          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
      sorter.className = 'fas fa-sort-up';
  }
}
    <% if flash[:cbasket_name] %>
        showNewCatchword();
    <% elsif flash[:obasket_name] %>
		showNewObjection();
	<% elsif flash[:custom_rating] %>
		showNewCustomRating()
    <% end %>
    function showNewCatchword() {
        $('#newCatchword').show();
        $('#catchwords').hide();
    }
    function hideNewCatchword() {
        $('#newCatchword').hide();
        $('#catchwords').show();
    }
    function showNewObjection() {
        $('#newObjection').show();
        $('#objections').hide();
    }
    function hideNewObjection() {
        $('#newObjection').hide();
        $('#objections').show();
	}
	function showNewCustomRating() {
        $('#newCustomRating').removeClass('hidden');
        $('#custom_rating').hide();
    }
    function hideNewCustomRating() {
        $('#newCustomRating').addClass('hidden');
        $('#custom_rating').show();
    }
    function redirect(path) {
        window.location.replace(path);
    }
	function showDoes() {
		$('#do_words').show();
		$('#dont_words').hide();
		$('#selected_word').text('Do say');
	}
	function showDonts() {
		$('#do_words').hide();
		$('#dont_words').show();
		$('#selected_word').text("Don't say");
	}
	function toggleDoSelect() {
		$('#doWordSelect').toggle();
	}
</script>